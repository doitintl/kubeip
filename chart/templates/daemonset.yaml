apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "kubeip.fullname" . }}
  labels:
    {{- include "kubeip.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kubeip.name" . }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kubeip.name" . }}
    spec:
      serviceAccountName: {{ include "kubeip.serviceAccountName" . | quote }}
      terminationGracePeriodSeconds: {{ .Values.daemonSet.terminationGracePeriodSeconds }}
      priorityClassName: {{ .Values.daemonSet.priorityClassName | quote }}
      nodeSelector:
{{- if .Values.daemonSet.nodeSelector }}
{{- toYaml .Values.daemonSet.nodeSelector | nindent 8 }}
{{- end }}
      tolerations:
        - operator: "Exists"
          effect: "NoSchedule"
        - operator: "Exists"
          effect: "NoExecute"
      containers:
        - name: kubeip
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: Always
          resources:
{{- toYaml .Values.daemonSet.resources | nindent 12 }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FILTER
              value: {{ .Values.daemonSet.env.FILTER | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.daemonSet.env.LOG_LEVEL | quote }}
            - name: LOG_JSON
              value: {{ .Values.daemonSet.env.LOG_JSON | quote }}
